#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GolfDB2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GolfDB20161207-01")]
	public partial class EventDetailDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEventDetail(EventDetail instance);
    partial void UpdateEventDetail(EventDetail instance);
    partial void DeleteEventDetail(EventDetail instance);
    #endregion
		
		public EventDetailDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GolfDB20161207_01ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EventDetailDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EventDetailDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EventDetailDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EventDetailDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EventDetail> EventDetails
		{
			get
			{
				return this.GetTable<EventDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventDetail")]
	public partial class EventDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EventId;
		
		private int _CourseId;
		
		private int _PlayFormat;
		
		private int _NumberOfHoles;
		
		private bool _IsShotgunStart;
		
		private string _Sponsor;
		
		private int _PlayListId;
		
		private int _OrgId;
		
		private int _StartHoleId;
		
		private int _NumGroups;
		
		private int _NumPerGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEventIdChanging(int value);
    partial void OnEventIdChanged();
    partial void OnCourseIdChanging(int value);
    partial void OnCourseIdChanged();
    partial void OnPlayFormatChanging(int value);
    partial void OnPlayFormatChanged();
    partial void OnNumberOfHolesChanging(int value);
    partial void OnNumberOfHolesChanged();
    partial void OnIsShotgunStartChanging(bool value);
    partial void OnIsShotgunStartChanged();
    partial void OnSponsorChanging(string value);
    partial void OnSponsorChanged();
    partial void OnPlayListIdChanging(int value);
    partial void OnPlayListIdChanged();
    partial void OnOrgIdChanging(int value);
    partial void OnOrgIdChanged();
    partial void OnStartHoleIdChanging(int value);
    partial void OnStartHoleIdChanged();
    partial void OnNumGroupsChanging(int value);
    partial void OnNumGroupsChanged();
    partial void OnNumPerGroupChanging(int value);
    partial void OnNumPerGroupChanged();
    #endregion
		
		public EventDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Int NOT NULL")]
		public int EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int NOT NULL")]
		public int CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayFormat", DbType="Int NOT NULL")]
		public int PlayFormat
		{
			get
			{
				return this._PlayFormat;
			}
			set
			{
				if ((this._PlayFormat != value))
				{
					this.OnPlayFormatChanging(value);
					this.SendPropertyChanging();
					this._PlayFormat = value;
					this.SendPropertyChanged("PlayFormat");
					this.OnPlayFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfHoles", DbType="Int NOT NULL")]
		public int NumberOfHoles
		{
			get
			{
				return this._NumberOfHoles;
			}
			set
			{
				if ((this._NumberOfHoles != value))
				{
					this.OnNumberOfHolesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfHoles = value;
					this.SendPropertyChanged("NumberOfHoles");
					this.OnNumberOfHolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShotgunStart", DbType="Bit NOT NULL")]
		public bool IsShotgunStart
		{
			get
			{
				return this._IsShotgunStart;
			}
			set
			{
				if ((this._IsShotgunStart != value))
				{
					this.OnIsShotgunStartChanging(value);
					this.SendPropertyChanging();
					this._IsShotgunStart = value;
					this.SendPropertyChanged("IsShotgunStart");
					this.OnIsShotgunStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sponsor", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Sponsor
		{
			get
			{
				return this._Sponsor;
			}
			set
			{
				if ((this._Sponsor != value))
				{
					this.OnSponsorChanging(value);
					this.SendPropertyChanging();
					this._Sponsor = value;
					this.SendPropertyChanged("Sponsor");
					this.OnSponsorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayListId", DbType="Int NOT NULL")]
		public int PlayListId
		{
			get
			{
				return this._PlayListId;
			}
			set
			{
				if ((this._PlayListId != value))
				{
					this.OnPlayListIdChanging(value);
					this.SendPropertyChanging();
					this._PlayListId = value;
					this.SendPropertyChanged("PlayListId");
					this.OnPlayListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgId", DbType="Int NOT NULL")]
		public int OrgId
		{
			get
			{
				return this._OrgId;
			}
			set
			{
				if ((this._OrgId != value))
				{
					this.OnOrgIdChanging(value);
					this.SendPropertyChanging();
					this._OrgId = value;
					this.SendPropertyChanged("OrgId");
					this.OnOrgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartHoleId", DbType="Int NOT NULL")]
		public int StartHoleId
		{
			get
			{
				return this._StartHoleId;
			}
			set
			{
				if ((this._StartHoleId != value))
				{
					this.OnStartHoleIdChanging(value);
					this.SendPropertyChanging();
					this._StartHoleId = value;
					this.SendPropertyChanged("StartHoleId");
					this.OnStartHoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumGroups", DbType="Int NOT NULL")]
		public int NumGroups
		{
			get
			{
				return this._NumGroups;
			}
			set
			{
				if ((this._NumGroups != value))
				{
					this.OnNumGroupsChanging(value);
					this.SendPropertyChanging();
					this._NumGroups = value;
					this.SendPropertyChanged("NumGroups");
					this.OnNumGroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPerGroup", DbType="Int NOT NULL")]
		public int NumPerGroup
		{
			get
			{
				return this._NumPerGroup;
			}
			set
			{
				if ((this._NumPerGroup != value))
				{
					this.OnNumPerGroupChanging(value);
					this.SendPropertyChanging();
					this._NumPerGroup = value;
					this.SendPropertyChanged("NumPerGroup");
					this.OnNumPerGroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
