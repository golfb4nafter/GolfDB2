@model GolfDB2.Models.Hole

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script type="text/javascript">
    function courseNameChanged(val) {
        updateNineNamesList(val);
    }

    function updateNineNamesList(val) {
        $.get("/api/RApiNineLabelsList/" + val, "", function (data) {

            alert(data);

            $('#Nine').empty();
            json = JSON.parse(data);
            alert(json);
            $.each(json, function (i, obj) {
                $('#Nine').append($('<option>').text(obj.text).attr('value', obj.val));
            });
        });
    }

    function updateGPSList(val) {
        $.get("/api/RApiGpsPointList/" + val, "", function (data) {
            $('#HoleId').empty();
            json = JSON.parse(data);
            $.each(json, function (i, obj) {
                $('#HoleId').append($('<option>').text(obj.text).attr('value', obj.val));
            });
        });
    }

</script>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Hole</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CourseId, GolfDB2.Models.MiscLists.GetCourseNamesSelectList(),
                                      new { @onchange = "courseNameChanged(this.value)" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Nine,GolfDB2.Models.MiscLists.GetNineLabelsSelectListByCourseIdAndType(1,null))
                @Html.ValidationMessageFor(model => model.Nine, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhotoUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhotoUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhotoUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
