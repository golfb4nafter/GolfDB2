@{
    ViewBag.Title = "Score Card";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script type="text/javascript">

    function updateMobileScoresDiv(isVertical) {

        $.ajax({
            url: '/api/HtmlApi?action=updatemobilescoresdiv&isVertical=' + isVertical,
            dataType: 'html',
            success: function (response) {
                $("#mobileScoresDiv").html(response);
            }
        });
    }

    function ajaxCall(url, fieldName) {
        $.get(url, function (data) {
            $(fieldName).empty();
            try {
                json = JSON.parse(JSON.stringify(data));
            } catch (err) {
                alert(err.message);
            }
            $.each(json, function (i, obj) {
                $(fieldName).append($('<option>').text(json[i].Text).attr('value', json[i].Value));
            });
        });
    }

    function updateCardSelect() {

        // Todo: pull eventId from event select
        var eventId = $('#eventSelect option:selected').val()

        var url = "/api/SelectListApi?action=updatecardselect&eventId=" + eventId;
        ajaxCall(url, "#cardSelect");
    }

    function loadScoresDiv() {

        // Todo: pull cardId from team-player select list
        var scoreCardId = $('#cardSelect option:selected').val()
        var ordinal = $('#teeSelect option:selected').val()
        var gender = $('#genderSelect option:selected').val()
        var eventId = $('#eventSelect option:selected').val()

        var url = "/api/SelectListApi?action=updatecardselect&eventId=" + eventId;

        $.ajax({
            url: '/api/HtmlApi?action=scoresdiv&scoreCardId=' + scoreCardId + "&ordinal=" + ordinal + "&gender=" + gender + "&eventId=" + eventId,
            dataType: 'html',
            success: function (response) {
                $("#scoresDiv").html(response);
            }
        });
    }

    var isVertical = "true";

    function setOrientation() {
        if (screen.orientation.type === "landscape-primary")
            isVertical = "false";
        else
            isVertical = "true";
    }

    function showOrientation(type) {
        console.log('new orientation is ', type);
        setOrientation();
        updateMobileScoresDiv(isVertical);
    }

    if (window.DeviceOrientationEvent) {
        // Our browser supports DeviceOrientation
        screen.orientation.addEventListener('change', showOrientation(screen.orientation.type));
        setOrientation();
    } else {
        console.log("Sorry, your browser doesn't support Device Orientation");
        updateMobileScoresDiv(isVertical);
    }

</script>

<h2>Index</h2>

<div id="mobileScoresDiv" name="mobileScoresDiv" />
