@model GolfDB2.Models.GeoData

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script type="text/javascript">
    function testAjaxCallback(val) {
        $.get("/api/HoleList/" + val, "", function (data) {
            $('#HoleId').empty();
            json = JSON.parse(data);
            $.each(json, function (i, obj) {
                $('#HoleId').append($('<option>').text(obj.text).attr('value', obj.val));
            });
        });
    }
</script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>GeoData</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*Course Name*@
        <div class="form-group">
            @Html.Label("Course Name", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CourseId,
                                      new SelectList(GolfDB2.Models.MiscLists.CourseNamesList, "Text", "Value"),
                                      new { @onchange = "testAjaxCallback(this.value)" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Description*@
        <div class="form-group">
            @Html.Label("Description", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GeoObjectDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GeoObjectDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Description*@
        <div class="form-group">
            @Html.Label("Description", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GeoObjectDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GeoObjectDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        @*GPS*@
        <div class="form-group">
            @*@Html.LabelFor(model => model.GeoSpatialDataId, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.Label("GPS", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GeoSpatialDataId, new SelectList(GolfDB2.Models.MiscLists.GeoSpatialDataList, "Text", "Value"))
                @Html.ValidationMessageFor(model => model.GeoSpatialDataId, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Object Type*@
        <div class="form-group">
            @Html.Label("Object Type", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GeoObjectType, new SelectList(GolfDB2.Models.MiscLists.ObjectTypeList, "Text", "Value"))
                @Html.ValidationMessageFor(model => model.GeoObjectType, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Hole Number*@
        <div class="form-group">
            @Html.Label("Hole Number", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.HoleId, new SelectList(GolfDB2.Models.MiscLists.CurrentHoleList, "Text", "Value"))
                @Html.ValidationMessageFor(model => model.HoleId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
