#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GolfDB2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GolfDB20161207-01")]
	public partial class GolfDB2DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCourseData(CourseData instance);
    partial void UpdateCourseData(CourseData instance);
    partial void DeleteCourseData(CourseData instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertEventDetail(EventDetail instance);
    partial void UpdateEventDetail(EventDetail instance);
    partial void DeleteEventDetail(EventDetail instance);
    partial void InsertGeoData(GeoData instance);
    partial void UpdateGeoData(GeoData instance);
    partial void DeleteGeoData(GeoData instance);
    partial void InsertGeoObjectType(GeoObjectType instance);
    partial void UpdateGeoObjectType(GeoObjectType instance);
    partial void DeleteGeoObjectType(GeoObjectType instance);
    partial void InsertGlobalSetting(GlobalSetting instance);
    partial void UpdateGlobalSetting(GlobalSetting instance);
    partial void DeleteGlobalSetting(GlobalSetting instance);
    partial void InsertGolfer(Golfer instance);
    partial void UpdateGolfer(Golfer instance);
    partial void DeleteGolfer(Golfer instance);
    partial void InsertHole(Hole instance);
    partial void UpdateHole(Hole instance);
    partial void DeleteHole(Hole instance);
    partial void InsertHoleList(HoleList instance);
    partial void UpdateHoleList(HoleList instance);
    partial void DeleteHoleList(HoleList instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    partial void InsertTeeTime(TeeTime instance);
    partial void UpdateTeeTime(TeeTime instance);
    partial void DeleteTeeTime(TeeTime instance);
    #endregion
		
		public GolfDB2DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GolfDB20161207_01ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GolfDB2DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GolfDB2DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GolfDB2DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GolfDB2DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CourseData> CourseDatas
		{
			get
			{
				return this.GetTable<CourseData>();
			}
		}
		
		public System.Data.Linq.Table<CourseRating> CourseRatings
		{
			get
			{
				return this.GetTable<CourseRating>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<EventDetail> EventDetails
		{
			get
			{
				return this.GetTable<EventDetail>();
			}
		}
		
		public System.Data.Linq.Table<GeoData> GeoDatas
		{
			get
			{
				return this.GetTable<GeoData>();
			}
		}
		
		public System.Data.Linq.Table<GeoObjectType> GeoObjectTypes
		{
			get
			{
				return this.GetTable<GeoObjectType>();
			}
		}
		
		public System.Data.Linq.Table<GeoSpatialTable> GeoSpatialTables
		{
			get
			{
				return this.GetTable<GeoSpatialTable>();
			}
		}
		
		public System.Data.Linq.Table<GlobalSetting> GlobalSettings
		{
			get
			{
				return this.GetTable<GlobalSetting>();
			}
		}
		
		public System.Data.Linq.Table<Golfer> Golfers
		{
			get
			{
				return this.GetTable<Golfer>();
			}
		}
		
		public System.Data.Linq.Table<Hole> Holes
		{
			get
			{
				return this.GetTable<Hole>();
			}
		}
		
		public System.Data.Linq.Table<HoleList> HoleLists
		{
			get
			{
				return this.GetTable<HoleList>();
			}
		}
		
		public System.Data.Linq.Table<Label> Labels
		{
			get
			{
				return this.GetTable<Label>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organizations
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		public System.Data.Linq.Table<TeeTime> TeeTimes
		{
			get
			{
				return this.GetTable<TeeTime>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseData")]
	public partial class CourseData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CourseName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _PostalCode;
		
		private string _Email;
		
		private string _Phone;
		
		private string _Url;
		
		private string _GoogleMapUrl;
		
		private System.Nullable<int> _NumberOfHoles;
		
		private System.Nullable<int> _NumberOfNines;
		
		private EntitySet<EventDetail> _EventDetails;
		
		private EntitySet<GeoData> _GeoDatas;
		
		private EntitySet<HoleList> _HoleLists;
		
		private EntitySet<TeeTime> _TeeTimes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnGoogleMapUrlChanging(string value);
    partial void OnGoogleMapUrlChanged();
    partial void OnNumberOfHolesChanging(System.Nullable<int> value);
    partial void OnNumberOfHolesChanged();
    partial void OnNumberOfNinesChanging(System.Nullable<int> value);
    partial void OnNumberOfNinesChanged();
    #endregion
		
		public CourseData()
		{
			this._EventDetails = new EntitySet<EventDetail>(new Action<EventDetail>(this.attach_EventDetails), new Action<EventDetail>(this.detach_EventDetails));
			this._GeoDatas = new EntitySet<GeoData>(new Action<GeoData>(this.attach_GeoDatas), new Action<GeoData>(this.detach_GeoDatas));
			this._HoleLists = new EntitySet<HoleList>(new Action<HoleList>(this.attach_HoleLists), new Action<HoleList>(this.detach_HoleLists));
			this._TeeTimes = new EntitySet<TeeTime>(new Action<TeeTime>(this.attach_TeeTimes), new Action<TeeTime>(this.detach_TeeTimes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(128)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(128)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(128)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(128)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(128)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(128)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(MAX)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoogleMapUrl", DbType="NVarChar(MAX)")]
		public string GoogleMapUrl
		{
			get
			{
				return this._GoogleMapUrl;
			}
			set
			{
				if ((this._GoogleMapUrl != value))
				{
					this.OnGoogleMapUrlChanging(value);
					this.SendPropertyChanging();
					this._GoogleMapUrl = value;
					this.SendPropertyChanged("GoogleMapUrl");
					this.OnGoogleMapUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfHoles", DbType="Int")]
		public System.Nullable<int> NumberOfHoles
		{
			get
			{
				return this._NumberOfHoles;
			}
			set
			{
				if ((this._NumberOfHoles != value))
				{
					this.OnNumberOfHolesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfHoles = value;
					this.SendPropertyChanged("NumberOfHoles");
					this.OnNumberOfHolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfNines", DbType="Int")]
		public System.Nullable<int> NumberOfNines
		{
			get
			{
				return this._NumberOfNines;
			}
			set
			{
				if ((this._NumberOfNines != value))
				{
					this.OnNumberOfNinesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfNines = value;
					this.SendPropertyChanged("NumberOfNines");
					this.OnNumberOfNinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseData_EventDetail", Storage="_EventDetails", ThisKey="Id", OtherKey="CourseId")]
		public EntitySet<EventDetail> EventDetails
		{
			get
			{
				return this._EventDetails;
			}
			set
			{
				this._EventDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseData_GeoData", Storage="_GeoDatas", ThisKey="Id", OtherKey="CourseId")]
		public EntitySet<GeoData> GeoDatas
		{
			get
			{
				return this._GeoDatas;
			}
			set
			{
				this._GeoDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseData_HoleList", Storage="_HoleLists", ThisKey="Id", OtherKey="CourseId")]
		public EntitySet<HoleList> HoleLists
		{
			get
			{
				return this._HoleLists;
			}
			set
			{
				this._HoleLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseData_TeeTime", Storage="_TeeTimes", ThisKey="Id", OtherKey="CourseId")]
		public EntitySet<TeeTime> TeeTimes
		{
			get
			{
				return this._TeeTimes;
			}
			set
			{
				this._TeeTimes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventDetails(EventDetail entity)
		{
			this.SendPropertyChanging();
			entity.CourseData = this;
		}
		
		private void detach_EventDetails(EventDetail entity)
		{
			this.SendPropertyChanging();
			entity.CourseData = null;
		}
		
		private void attach_GeoDatas(GeoData entity)
		{
			this.SendPropertyChanging();
			entity.CourseData = this;
		}
		
		private void detach_GeoDatas(GeoData entity)
		{
			this.SendPropertyChanging();
			entity.CourseData = null;
		}
		
		private void attach_HoleLists(HoleList entity)
		{
			this.SendPropertyChanging();
			entity.CourseData = this;
		}
		
		private void detach_HoleLists(HoleList entity)
		{
			this.SendPropertyChanging();
			entity.CourseData = null;
		}
		
		private void attach_TeeTimes(TeeTime entity)
		{
			this.SendPropertyChanging();
			entity.CourseData = this;
		}
		
		private void detach_TeeTimes(TeeTime entity)
		{
			this.SendPropertyChanging();
			entity.CourseData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseRatings")]
	public partial class CourseRating
	{
		
		private int _Id;
		
		private int _CourseId;
		
		private string _TeeName;
		
		private decimal _Course_Rating;
		
		private int _SlopeRating18;
		
		private string _Front9;
		
		private string _Back9;
		
		private decimal _BogeyRating;
		
		private System.Nullable<char> _Gender;
		
		private string _HolesListDescription;
		
		private string _HandicapByHole;
		
		public CourseRating()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int NOT NULL")]
		public int CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this._CourseId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TeeName
		{
			get
			{
				return this._TeeName;
			}
			set
			{
				if ((this._TeeName != value))
				{
					this._TeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_Rating", DbType="Decimal(5,2) NOT NULL")]
		public decimal Course_Rating
		{
			get
			{
				return this._Course_Rating;
			}
			set
			{
				if ((this._Course_Rating != value))
				{
					this._Course_Rating = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlopeRating18", DbType="Int NOT NULL")]
		public int SlopeRating18
		{
			get
			{
				return this._SlopeRating18;
			}
			set
			{
				if ((this._SlopeRating18 != value))
				{
					this._SlopeRating18 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Front9", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Front9
		{
			get
			{
				return this._Front9;
			}
			set
			{
				if ((this._Front9 != value))
				{
					this._Front9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Back9", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Back9
		{
			get
			{
				return this._Back9;
			}
			set
			{
				if ((this._Back9 != value))
				{
					this._Back9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BogeyRating", DbType="Decimal(5,2) NOT NULL")]
		public decimal BogeyRating
		{
			get
			{
				return this._BogeyRating;
			}
			set
			{
				if ((this._BogeyRating != value))
				{
					this._BogeyRating = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NChar(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolesListDescription", DbType="NVarChar(MAX)")]
		public string HolesListDescription
		{
			get
			{
				return this._HolesListDescription;
			}
			set
			{
				if ((this._HolesListDescription != value))
				{
					this._HolesListDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandicapByHole", DbType="NVarChar(MAX)")]
		public string HandicapByHole
		{
			get
			{
				return this._HandicapByHole;
			}
			set
			{
				if ((this._HandicapByHole != value))
				{
					this._HandicapByHole = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _CourseId;
		
		private string _text;
		
		private System.DateTime _start;
		
		private System.DateTime _end;
		
		private EntitySet<EventDetail> _EventDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCourseIdChanging(int value);
    partial void OnCourseIdChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnstartChanging(System.DateTime value);
    partial void OnstartChanged();
    partial void OnendChanging(System.DateTime value);
    partial void OnendChanged();
    #endregion
		
		public Event()
		{
			this._EventDetails = new EntitySet<EventDetail>(new Action<EventDetail>(this.attach_EventDetails), new Action<EventDetail>(this.detach_EventDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int NOT NULL")]
		public int CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start", DbType="DateTime NOT NULL")]
		public System.DateTime start
		{
			get
			{
				return this._start;
			}
			set
			{
				if ((this._start != value))
				{
					this.OnstartChanging(value);
					this.SendPropertyChanging();
					this._start = value;
					this.SendPropertyChanged("start");
					this.OnstartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[end]", Storage="_end", DbType="DateTime NOT NULL")]
		public System.DateTime end
		{
			get
			{
				return this._end;
			}
			set
			{
				if ((this._end != value))
				{
					this.OnendChanging(value);
					this.SendPropertyChanging();
					this._end = value;
					this.SendPropertyChanged("end");
					this.OnendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventDetail", Storage="_EventDetails", ThisKey="id", OtherKey="EventId")]
		public EntitySet<EventDetail> EventDetails
		{
			get
			{
				return this._EventDetails;
			}
			set
			{
				this._EventDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventDetails(EventDetail entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_EventDetails(EventDetail entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventDetail")]
	public partial class EventDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EventId;
		
		private int _CourseId;
		
		private int _PlayFormat;
		
		private int _NumberOfHoles;
		
		private bool _IsShotgunStart;
		
		private string _Sponsor;
		
		private int _PlayListId;
		
		private int _OrgId;
		
		private int _StartHoleId;
		
		private int _NumGroups;
		
		private int _NumPerGroup;
		
		private EntityRef<CourseData> _CourseData;
		
		private EntityRef<Event> _Event;
		
		private EntityRef<Hole> _Hole;
		
		private EntityRef<HoleList> _HoleList;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEventIdChanging(int value);
    partial void OnEventIdChanged();
    partial void OnCourseIdChanging(int value);
    partial void OnCourseIdChanged();
    partial void OnPlayFormatChanging(int value);
    partial void OnPlayFormatChanged();
    partial void OnNumberOfHolesChanging(int value);
    partial void OnNumberOfHolesChanged();
    partial void OnIsShotgunStartChanging(bool value);
    partial void OnIsShotgunStartChanged();
    partial void OnSponsorChanging(string value);
    partial void OnSponsorChanged();
    partial void OnPlayListIdChanging(int value);
    partial void OnPlayListIdChanged();
    partial void OnOrgIdChanging(int value);
    partial void OnOrgIdChanged();
    partial void OnStartHoleIdChanging(int value);
    partial void OnStartHoleIdChanged();
    partial void OnNumGroupsChanging(int value);
    partial void OnNumGroupsChanged();
    partial void OnNumPerGroupChanging(int value);
    partial void OnNumPerGroupChanged();
    #endregion
		
		public EventDetail()
		{
			this._CourseData = default(EntityRef<CourseData>);
			this._Event = default(EntityRef<Event>);
			this._Hole = default(EntityRef<Hole>);
			this._HoleList = default(EntityRef<HoleList>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Int NOT NULL")]
		public int EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int NOT NULL")]
		public int CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					if (this._CourseData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayFormat", DbType="Int NOT NULL")]
		public int PlayFormat
		{
			get
			{
				return this._PlayFormat;
			}
			set
			{
				if ((this._PlayFormat != value))
				{
					this.OnPlayFormatChanging(value);
					this.SendPropertyChanging();
					this._PlayFormat = value;
					this.SendPropertyChanged("PlayFormat");
					this.OnPlayFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfHoles", DbType="Int NOT NULL")]
		public int NumberOfHoles
		{
			get
			{
				return this._NumberOfHoles;
			}
			set
			{
				if ((this._NumberOfHoles != value))
				{
					this.OnNumberOfHolesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfHoles = value;
					this.SendPropertyChanged("NumberOfHoles");
					this.OnNumberOfHolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShotgunStart", DbType="Bit NOT NULL")]
		public bool IsShotgunStart
		{
			get
			{
				return this._IsShotgunStart;
			}
			set
			{
				if ((this._IsShotgunStart != value))
				{
					this.OnIsShotgunStartChanging(value);
					this.SendPropertyChanging();
					this._IsShotgunStart = value;
					this.SendPropertyChanged("IsShotgunStart");
					this.OnIsShotgunStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sponsor", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Sponsor
		{
			get
			{
				return this._Sponsor;
			}
			set
			{
				if ((this._Sponsor != value))
				{
					this.OnSponsorChanging(value);
					this.SendPropertyChanging();
					this._Sponsor = value;
					this.SendPropertyChanged("Sponsor");
					this.OnSponsorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayListId", DbType="Int NOT NULL")]
		public int PlayListId
		{
			get
			{
				return this._PlayListId;
			}
			set
			{
				if ((this._PlayListId != value))
				{
					if (this._HoleList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlayListIdChanging(value);
					this.SendPropertyChanging();
					this._PlayListId = value;
					this.SendPropertyChanged("PlayListId");
					this.OnPlayListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgId", DbType="Int NOT NULL")]
		public int OrgId
		{
			get
			{
				return this._OrgId;
			}
			set
			{
				if ((this._OrgId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgIdChanging(value);
					this.SendPropertyChanging();
					this._OrgId = value;
					this.SendPropertyChanged("OrgId");
					this.OnOrgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartHoleId", DbType="Int NOT NULL")]
		public int StartHoleId
		{
			get
			{
				return this._StartHoleId;
			}
			set
			{
				if ((this._StartHoleId != value))
				{
					if (this._Hole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStartHoleIdChanging(value);
					this.SendPropertyChanging();
					this._StartHoleId = value;
					this.SendPropertyChanged("StartHoleId");
					this.OnStartHoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumGroups", DbType="Int NOT NULL")]
		public int NumGroups
		{
			get
			{
				return this._NumGroups;
			}
			set
			{
				if ((this._NumGroups != value))
				{
					this.OnNumGroupsChanging(value);
					this.SendPropertyChanging();
					this._NumGroups = value;
					this.SendPropertyChanged("NumGroups");
					this.OnNumGroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPerGroup", DbType="Int NOT NULL")]
		public int NumPerGroup
		{
			get
			{
				return this._NumPerGroup;
			}
			set
			{
				if ((this._NumPerGroup != value))
				{
					this.OnNumPerGroupChanging(value);
					this.SendPropertyChanging();
					this._NumPerGroup = value;
					this.SendPropertyChanged("NumPerGroup");
					this.OnNumPerGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseData_EventDetail", Storage="_CourseData", ThisKey="CourseId", OtherKey="Id", IsForeignKey=true)]
		public CourseData CourseData
		{
			get
			{
				return this._CourseData.Entity;
			}
			set
			{
				CourseData previousValue = this._CourseData.Entity;
				if (((previousValue != value) 
							|| (this._CourseData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseData.Entity = null;
						previousValue.EventDetails.Remove(this);
					}
					this._CourseData.Entity = value;
					if ((value != null))
					{
						value.EventDetails.Add(this);
						this._CourseId = value.Id;
					}
					else
					{
						this._CourseId = default(int);
					}
					this.SendPropertyChanged("CourseData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventDetail", Storage="_Event", ThisKey="EventId", OtherKey="id", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.EventDetails.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.EventDetails.Add(this);
						this._EventId = value.id;
					}
					else
					{
						this._EventId = default(int);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hole_EventDetail", Storage="_Hole", ThisKey="StartHoleId", OtherKey="Id", IsForeignKey=true)]
		public Hole Hole
		{
			get
			{
				return this._Hole.Entity;
			}
			set
			{
				Hole previousValue = this._Hole.Entity;
				if (((previousValue != value) 
							|| (this._Hole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hole.Entity = null;
						previousValue.EventDetails.Remove(this);
					}
					this._Hole.Entity = value;
					if ((value != null))
					{
						value.EventDetails.Add(this);
						this._StartHoleId = value.Id;
					}
					else
					{
						this._StartHoleId = default(int);
					}
					this.SendPropertyChanged("Hole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoleList_EventDetail", Storage="_HoleList", ThisKey="PlayListId", OtherKey="Id", IsForeignKey=true)]
		public HoleList HoleList
		{
			get
			{
				return this._HoleList.Entity;
			}
			set
			{
				HoleList previousValue = this._HoleList.Entity;
				if (((previousValue != value) 
							|| (this._HoleList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoleList.Entity = null;
						previousValue.EventDetails.Remove(this);
					}
					this._HoleList.Entity = value;
					if ((value != null))
					{
						value.EventDetails.Add(this);
						this._PlayListId = value.Id;
					}
					else
					{
						this._PlayListId = default(int);
					}
					this.SendPropertyChanged("HoleList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_EventDetail", Storage="_Organization", ThisKey="OrgId", OtherKey="Id", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.EventDetails.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.EventDetails.Add(this);
						this._OrgId = value.Id;
					}
					else
					{
						this._OrgId = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoData")]
	public partial class GeoData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _GeoSpatialDataId;
		
		private string _GeoObjectDescription;
		
		private int _GeoObjectType;
		
		private int _HoleId;
		
		private int _OrderNumber;
		
		private System.Nullable<int> _CourseId;
		
		private System.Nullable<int> _YardsToFront;
		
		private System.Nullable<int> _YardsToMiddle;
		
		private System.Nullable<int> _YardsToBack;
		
		private EntityRef<CourseData> _CourseData;
		
		private EntityRef<Hole> _Hole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGeoSpatialDataIdChanging(int value);
    partial void OnGeoSpatialDataIdChanged();
    partial void OnGeoObjectDescriptionChanging(string value);
    partial void OnGeoObjectDescriptionChanged();
    partial void OnGeoObjectTypeChanging(int value);
    partial void OnGeoObjectTypeChanged();
    partial void OnHoleIdChanging(int value);
    partial void OnHoleIdChanged();
    partial void OnOrderNumberChanging(int value);
    partial void OnOrderNumberChanged();
    partial void OnCourseIdChanging(System.Nullable<int> value);
    partial void OnCourseIdChanged();
    partial void OnYardsToFrontChanging(System.Nullable<int> value);
    partial void OnYardsToFrontChanged();
    partial void OnYardsToMiddleChanging(System.Nullable<int> value);
    partial void OnYardsToMiddleChanged();
    partial void OnYardsToBackChanging(System.Nullable<int> value);
    partial void OnYardsToBackChanged();
    #endregion
		
		public GeoData()
		{
			this._CourseData = default(EntityRef<CourseData>);
			this._Hole = default(EntityRef<Hole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoSpatialDataId", DbType="Int NOT NULL")]
		public int GeoSpatialDataId
		{
			get
			{
				return this._GeoSpatialDataId;
			}
			set
			{
				if ((this._GeoSpatialDataId != value))
				{
					this.OnGeoSpatialDataIdChanging(value);
					this.SendPropertyChanging();
					this._GeoSpatialDataId = value;
					this.SendPropertyChanged("GeoSpatialDataId");
					this.OnGeoSpatialDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoObjectDescription", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GeoObjectDescription
		{
			get
			{
				return this._GeoObjectDescription;
			}
			set
			{
				if ((this._GeoObjectDescription != value))
				{
					this.OnGeoObjectDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GeoObjectDescription = value;
					this.SendPropertyChanged("GeoObjectDescription");
					this.OnGeoObjectDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoObjectType", DbType="Int NOT NULL")]
		public int GeoObjectType
		{
			get
			{
				return this._GeoObjectType;
			}
			set
			{
				if ((this._GeoObjectType != value))
				{
					this.OnGeoObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._GeoObjectType = value;
					this.SendPropertyChanged("GeoObjectType");
					this.OnGeoObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoleId", DbType="Int NOT NULL")]
		public int HoleId
		{
			get
			{
				return this._HoleId;
			}
			set
			{
				if ((this._HoleId != value))
				{
					if (this._Hole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHoleIdChanging(value);
					this.SendPropertyChanging();
					this._HoleId = value;
					this.SendPropertyChanged("HoleId");
					this.OnHoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="Int NOT NULL")]
		public int OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int")]
		public System.Nullable<int> CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					if (this._CourseData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YardsToFront", DbType="Int")]
		public System.Nullable<int> YardsToFront
		{
			get
			{
				return this._YardsToFront;
			}
			set
			{
				if ((this._YardsToFront != value))
				{
					this.OnYardsToFrontChanging(value);
					this.SendPropertyChanging();
					this._YardsToFront = value;
					this.SendPropertyChanged("YardsToFront");
					this.OnYardsToFrontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YardsToMiddle", DbType="Int")]
		public System.Nullable<int> YardsToMiddle
		{
			get
			{
				return this._YardsToMiddle;
			}
			set
			{
				if ((this._YardsToMiddle != value))
				{
					this.OnYardsToMiddleChanging(value);
					this.SendPropertyChanging();
					this._YardsToMiddle = value;
					this.SendPropertyChanged("YardsToMiddle");
					this.OnYardsToMiddleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YardsToBack", DbType="Int")]
		public System.Nullable<int> YardsToBack
		{
			get
			{
				return this._YardsToBack;
			}
			set
			{
				if ((this._YardsToBack != value))
				{
					this.OnYardsToBackChanging(value);
					this.SendPropertyChanging();
					this._YardsToBack = value;
					this.SendPropertyChanged("YardsToBack");
					this.OnYardsToBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseData_GeoData", Storage="_CourseData", ThisKey="CourseId", OtherKey="Id", IsForeignKey=true)]
		public CourseData CourseData
		{
			get
			{
				return this._CourseData.Entity;
			}
			set
			{
				CourseData previousValue = this._CourseData.Entity;
				if (((previousValue != value) 
							|| (this._CourseData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseData.Entity = null;
						previousValue.GeoDatas.Remove(this);
					}
					this._CourseData.Entity = value;
					if ((value != null))
					{
						value.GeoDatas.Add(this);
						this._CourseId = value.Id;
					}
					else
					{
						this._CourseId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CourseData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hole_GeoData", Storage="_Hole", ThisKey="HoleId", OtherKey="Id", IsForeignKey=true)]
		public Hole Hole
		{
			get
			{
				return this._Hole.Entity;
			}
			set
			{
				Hole previousValue = this._Hole.Entity;
				if (((previousValue != value) 
							|| (this._Hole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hole.Entity = null;
						previousValue.GeoDatas.Remove(this);
					}
					this._Hole.Entity = value;
					if ((value != null))
					{
						value.GeoDatas.Add(this);
						this._HoleId = value.Id;
					}
					else
					{
						this._HoleId = default(int);
					}
					this.SendPropertyChanged("Hole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoObjectType")]
	public partial class GeoObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GeoObjectType1;
		
		private string _GeoObjectDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGeoObjectType1Changing(string value);
    partial void OnGeoObjectType1Changed();
    partial void OnGeoObjectDescriptionChanging(string value);
    partial void OnGeoObjectDescriptionChanged();
    #endregion
		
		public GeoObjectType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GeoObjectType", Storage="_GeoObjectType1", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string GeoObjectType1
		{
			get
			{
				return this._GeoObjectType1;
			}
			set
			{
				if ((this._GeoObjectType1 != value))
				{
					this.OnGeoObjectType1Changing(value);
					this.SendPropertyChanging();
					this._GeoObjectType1 = value;
					this.SendPropertyChanged("GeoObjectType1");
					this.OnGeoObjectType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoObjectDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string GeoObjectDescription
		{
			get
			{
				return this._GeoObjectDescription;
			}
			set
			{
				if ((this._GeoObjectDescription != value))
				{
					this.OnGeoObjectDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GeoObjectDescription = value;
					this.SendPropertyChanged("GeoObjectDescription");
					this.OnGeoObjectDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoSpatialTable")]
	public partial class GeoSpatialTable
	{
		
		private int _Id;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _Altitude;
		
		private string _LocationDescription;
		
		private string _GoogleMapsViewUrl;
		
		private int _CourseId;
		
		public GeoSpatialTable()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(20)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(20)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Altitude", DbType="NVarChar(10)")]
		public string Altitude
		{
			get
			{
				return this._Altitude;
			}
			set
			{
				if ((this._Altitude != value))
				{
					this._Altitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationDescription", DbType="NVarChar(MAX)")]
		public string LocationDescription
		{
			get
			{
				return this._LocationDescription;
			}
			set
			{
				if ((this._LocationDescription != value))
				{
					this._LocationDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoogleMapsViewUrl", DbType="NVarChar(MAX)")]
		public string GoogleMapsViewUrl
		{
			get
			{
				return this._GoogleMapsViewUrl;
			}
			set
			{
				if ((this._GoogleMapsViewUrl != value))
				{
					this._GoogleMapsViewUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int NOT NULL")]
		public int CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this._CourseId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlobalSettings")]
	public partial class GlobalSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SettingName;
		
		private string _Value;
		
		private System.Data.Linq.Binary _LastWritten;
		
		private int _LastUserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnLastWrittenChanging(System.Data.Linq.Binary value);
    partial void OnLastWrittenChanged();
    partial void OnLastUserIdChanging(int value);
    partial void OnLastUserIdChanged();
    #endregion
		
		public GlobalSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(256) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastWritten", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastWritten
		{
			get
			{
				return this._LastWritten;
			}
			set
			{
				if ((this._LastWritten != value))
				{
					this.OnLastWrittenChanging(value);
					this.SendPropertyChanging();
					this._LastWritten = value;
					this.SendPropertyChanged("LastWritten");
					this.OnLastWrittenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUserId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LastUserId
		{
			get
			{
				return this._LastUserId;
			}
			set
			{
				if ((this._LastUserId != value))
				{
					this.OnLastUserIdChanging(value);
					this.SendPropertyChanging();
					this._LastUserId = value;
					this.SendPropertyChanged("LastUserId");
					this.OnLastUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Golfer")]
	public partial class Golfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Phone;
		
		private string _EMail;
		
		private int _OrganizationId;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnOrganizationIdChanging(int value);
    partial void OnOrganizationIdChanged();
    #endregion
		
		public Golfer()
		{
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="Int NOT NULL")]
		public int OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Golfer", Storage="_Organization", ThisKey="OrganizationId", OtherKey="Id", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.Golfers.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.Golfers.Add(this);
						this._OrganizationId = value.Id;
					}
					else
					{
						this._OrganizationId = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hole")]
	public partial class Hole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CourseId;
		
		private int _Nine;
		
		private int _Number;
		
		private string _PhotoUrl;
		
		private string _Description;
		
		private EntitySet<EventDetail> _EventDetails;
		
		private EntitySet<GeoData> _GeoDatas;
		
		private EntitySet<TeeTime> _TeeTimes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCourseIdChanging(int value);
    partial void OnCourseIdChanged();
    partial void OnNineChanging(int value);
    partial void OnNineChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnPhotoUrlChanging(string value);
    partial void OnPhotoUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Hole()
		{
			this._EventDetails = new EntitySet<EventDetail>(new Action<EventDetail>(this.attach_EventDetails), new Action<EventDetail>(this.detach_EventDetails));
			this._GeoDatas = new EntitySet<GeoData>(new Action<GeoData>(this.attach_GeoDatas), new Action<GeoData>(this.detach_GeoDatas));
			this._TeeTimes = new EntitySet<TeeTime>(new Action<TeeTime>(this.attach_TeeTimes), new Action<TeeTime>(this.detach_TeeTimes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int NOT NULL")]
		public int CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nine", DbType="Int NOT NULL")]
		public int Nine
		{
			get
			{
				return this._Nine;
			}
			set
			{
				if ((this._Nine != value))
				{
					this.OnNineChanging(value);
					this.SendPropertyChanging();
					this._Nine = value;
					this.SendPropertyChanged("Nine");
					this.OnNineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(MAX)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this.OnPhotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PhotoUrl = value;
					this.SendPropertyChanged("PhotoUrl");
					this.OnPhotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hole_EventDetail", Storage="_EventDetails", ThisKey="Id", OtherKey="StartHoleId")]
		public EntitySet<EventDetail> EventDetails
		{
			get
			{
				return this._EventDetails;
			}
			set
			{
				this._EventDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hole_GeoData", Storage="_GeoDatas", ThisKey="Id", OtherKey="HoleId")]
		public EntitySet<GeoData> GeoDatas
		{
			get
			{
				return this._GeoDatas;
			}
			set
			{
				this._GeoDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hole_TeeTime", Storage="_TeeTimes", ThisKey="Id", OtherKey="HoleId")]
		public EntitySet<TeeTime> TeeTimes
		{
			get
			{
				return this._TeeTimes;
			}
			set
			{
				this._TeeTimes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventDetails(EventDetail entity)
		{
			this.SendPropertyChanging();
			entity.Hole = this;
		}
		
		private void detach_EventDetails(EventDetail entity)
		{
			this.SendPropertyChanging();
			entity.Hole = null;
		}
		
		private void attach_GeoDatas(GeoData entity)
		{
			this.SendPropertyChanging();
			entity.Hole = this;
		}
		
		private void detach_GeoDatas(GeoData entity)
		{
			this.SendPropertyChanging();
			entity.Hole = null;
		}
		
		private void attach_TeeTimes(TeeTime entity)
		{
			this.SendPropertyChanging();
			entity.Hole = this;
		}
		
		private void detach_TeeTimes(TeeTime entity)
		{
			this.SendPropertyChanging();
			entity.Hole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoleList")]
	public partial class HoleList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CourseId;
		
		private string _Label;
		
		private string _HoleList1;
		
		private string _BList;
		
		private EntitySet<EventDetail> _EventDetails;
		
		private EntityRef<CourseData> _CourseData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCourseIdChanging(int value);
    partial void OnCourseIdChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnHoleList1Changing(string value);
    partial void OnHoleList1Changed();
    partial void OnBListChanging(string value);
    partial void OnBListChanged();
    #endregion
		
		public HoleList()
		{
			this._EventDetails = new EntitySet<EventDetail>(new Action<EventDetail>(this.attach_EventDetails), new Action<EventDetail>(this.detach_EventDetails));
			this._CourseData = default(EntityRef<CourseData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int NOT NULL")]
		public int CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					if (this._CourseData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="HoleList", Storage="_HoleList1", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string HoleList1
		{
			get
			{
				return this._HoleList1;
			}
			set
			{
				if ((this._HoleList1 != value))
				{
					this.OnHoleList1Changing(value);
					this.SendPropertyChanging();
					this._HoleList1 = value;
					this.SendPropertyChanged("HoleList1");
					this.OnHoleList1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BList", DbType="NVarChar(256)")]
		public string BList
		{
			get
			{
				return this._BList;
			}
			set
			{
				if ((this._BList != value))
				{
					this.OnBListChanging(value);
					this.SendPropertyChanging();
					this._BList = value;
					this.SendPropertyChanged("BList");
					this.OnBListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoleList_EventDetail", Storage="_EventDetails", ThisKey="Id", OtherKey="PlayListId")]
		public EntitySet<EventDetail> EventDetails
		{
			get
			{
				return this._EventDetails;
			}
			set
			{
				this._EventDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseData_HoleList", Storage="_CourseData", ThisKey="CourseId", OtherKey="Id", IsForeignKey=true)]
		public CourseData CourseData
		{
			get
			{
				return this._CourseData.Entity;
			}
			set
			{
				CourseData previousValue = this._CourseData.Entity;
				if (((previousValue != value) 
							|| (this._CourseData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseData.Entity = null;
						previousValue.HoleLists.Remove(this);
					}
					this._CourseData.Entity = value;
					if ((value != null))
					{
						value.HoleLists.Add(this);
						this._CourseId = value.Id;
					}
					else
					{
						this._CourseId = default(int);
					}
					this.SendPropertyChanged("CourseData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventDetails(EventDetail entity)
		{
			this.SendPropertyChanging();
			entity.HoleList = this;
		}
		
		private void detach_EventDetails(EventDetail entity)
		{
			this.SendPropertyChanging();
			entity.HoleList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Labels")]
	public partial class Label
	{
		
		private int _Id;
		
		private int _OwnerId;
		
		private int _Ordinal;
		
		private string _LabelType;
		
		private string _Label1;
		
		private string _Notes;
		
		public Label()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerId", DbType="Int NOT NULL")]
		public int OwnerId
		{
			get
			{
				return this._OwnerId;
			}
			set
			{
				if ((this._OwnerId != value))
				{
					this._OwnerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordinal", DbType="Int NOT NULL")]
		public int Ordinal
		{
			get
			{
				return this._Ordinal;
			}
			set
			{
				if ((this._Ordinal != value))
				{
					this._Ordinal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelType", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LabelType
		{
			get
			{
				return this._LabelType;
			}
			set
			{
				if ((this._LabelType != value))
				{
					this._LabelType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Label", Storage="_Label1", DbType="NVarChar(MAX)")]
		public string Label1
		{
			get
			{
				return this._Label1;
			}
			set
			{
				if ((this._Label1 != value))
				{
					this._Label1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organization")]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _OrgName;
		
		private string _ContactName;
		
		private string _ContactPhone;
		
		private string _OrgDescription;
		
		private EntitySet<EventDetail> _EventDetails;
		
		private EntitySet<Golfer> _Golfers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrgNameChanging(string value);
    partial void OnOrgNameChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnOrgDescriptionChanging(string value);
    partial void OnOrgDescriptionChanged();
    #endregion
		
		public Organization()
		{
			this._EventDetails = new EntitySet<EventDetail>(new Action<EventDetail>(this.attach_EventDetails), new Action<EventDetail>(this.detach_EventDetails));
			this._Golfers = new EntitySet<Golfer>(new Action<Golfer>(this.attach_Golfers), new Action<Golfer>(this.detach_Golfers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string OrgName
		{
			get
			{
				return this._OrgName;
			}
			set
			{
				if ((this._OrgName != value))
				{
					this.OnOrgNameChanging(value);
					this.SendPropertyChanging();
					this._OrgName = value;
					this.SendPropertyChanged("OrgName");
					this.OnOrgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgDescription", DbType="NVarChar(256)")]
		public string OrgDescription
		{
			get
			{
				return this._OrgDescription;
			}
			set
			{
				if ((this._OrgDescription != value))
				{
					this.OnOrgDescriptionChanging(value);
					this.SendPropertyChanging();
					this._OrgDescription = value;
					this.SendPropertyChanged("OrgDescription");
					this.OnOrgDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_EventDetail", Storage="_EventDetails", ThisKey="Id", OtherKey="OrgId")]
		public EntitySet<EventDetail> EventDetails
		{
			get
			{
				return this._EventDetails;
			}
			set
			{
				this._EventDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Golfer", Storage="_Golfers", ThisKey="Id", OtherKey="OrganizationId")]
		public EntitySet<Golfer> Golfers
		{
			get
			{
				return this._Golfers;
			}
			set
			{
				this._Golfers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventDetails(EventDetail entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_EventDetails(EventDetail entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_Golfers(Golfer entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_Golfers(Golfer entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeeTime")]
	public partial class TeeTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TeeTimeOffset;
		
		private System.DateTime _Tee_Time;
		
		private int _CourseId;
		
		private int _EventId;
		
		private string _ReservedByName;
		
		private string _TelephoneNumber;
		
		private int _HoleId;
		
		private int _NumberOfPlayers;
		
		private string _PlayerNames;
		
		private EntityRef<TeeTime> _TeeTime2;
		
		private EntityRef<CourseData> _CourseData;
		
		private EntityRef<Hole> _Hole;
		
		private EntityRef<TeeTime> _TeeTime1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTeeTimeOffsetChanging(int value);
    partial void OnTeeTimeOffsetChanged();
    partial void OnTee_TimeChanging(System.DateTime value);
    partial void OnTee_TimeChanged();
    partial void OnCourseIdChanging(int value);
    partial void OnCourseIdChanged();
    partial void OnEventIdChanging(int value);
    partial void OnEventIdChanged();
    partial void OnReservedByNameChanging(string value);
    partial void OnReservedByNameChanged();
    partial void OnTelephoneNumberChanging(string value);
    partial void OnTelephoneNumberChanged();
    partial void OnHoleIdChanging(int value);
    partial void OnHoleIdChanged();
    partial void OnNumberOfPlayersChanging(int value);
    partial void OnNumberOfPlayersChanged();
    partial void OnPlayerNamesChanging(string value);
    partial void OnPlayerNamesChanged();
    #endregion
		
		public TeeTime()
		{
			this._TeeTime2 = default(EntityRef<TeeTime>);
			this._CourseData = default(EntityRef<CourseData>);
			this._Hole = default(EntityRef<Hole>);
			this._TeeTime1 = default(EntityRef<TeeTime>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._TeeTime1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeeTimeOffset", DbType="Int NOT NULL")]
		public int TeeTimeOffset
		{
			get
			{
				return this._TeeTimeOffset;
			}
			set
			{
				if ((this._TeeTimeOffset != value))
				{
					this.OnTeeTimeOffsetChanging(value);
					this.SendPropertyChanging();
					this._TeeTimeOffset = value;
					this.SendPropertyChanged("TeeTimeOffset");
					this.OnTeeTimeOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tee_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Tee_Time
		{
			get
			{
				return this._Tee_Time;
			}
			set
			{
				if ((this._Tee_Time != value))
				{
					this.OnTee_TimeChanging(value);
					this.SendPropertyChanging();
					this._Tee_Time = value;
					this.SendPropertyChanged("Tee_Time");
					this.OnTee_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="Int NOT NULL")]
		public int CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					if (this._CourseData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Int NOT NULL")]
		public int EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservedByName", DbType="NVarChar(128)")]
		public string ReservedByName
		{
			get
			{
				return this._ReservedByName;
			}
			set
			{
				if ((this._ReservedByName != value))
				{
					this.OnReservedByNameChanging(value);
					this.SendPropertyChanging();
					this._ReservedByName = value;
					this.SendPropertyChanged("ReservedByName");
					this.OnReservedByNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNumber", DbType="NChar(80)")]
		public string TelephoneNumber
		{
			get
			{
				return this._TelephoneNumber;
			}
			set
			{
				if ((this._TelephoneNumber != value))
				{
					this.OnTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNumber = value;
					this.SendPropertyChanged("TelephoneNumber");
					this.OnTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoleId", DbType="Int NOT NULL")]
		public int HoleId
		{
			get
			{
				return this._HoleId;
			}
			set
			{
				if ((this._HoleId != value))
				{
					if (this._Hole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHoleIdChanging(value);
					this.SendPropertyChanging();
					this._HoleId = value;
					this.SendPropertyChanged("HoleId");
					this.OnHoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPlayers", DbType="Int NOT NULL")]
		public int NumberOfPlayers
		{
			get
			{
				return this._NumberOfPlayers;
			}
			set
			{
				if ((this._NumberOfPlayers != value))
				{
					this.OnNumberOfPlayersChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPlayers = value;
					this.SendPropertyChanged("NumberOfPlayers");
					this.OnNumberOfPlayersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerNames", DbType="NVarChar(256)")]
		public string PlayerNames
		{
			get
			{
				return this._PlayerNames;
			}
			set
			{
				if ((this._PlayerNames != value))
				{
					this.OnPlayerNamesChanging(value);
					this.SendPropertyChanging();
					this._PlayerNames = value;
					this.SendPropertyChanged("PlayerNames");
					this.OnPlayerNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeeTime_TeeTime", Storage="_TeeTime2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public TeeTime TeeTime2
		{
			get
			{
				return this._TeeTime2.Entity;
			}
			set
			{
				TeeTime previousValue = this._TeeTime2.Entity;
				if (((previousValue != value) 
							|| (this._TeeTime2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeeTime2.Entity = null;
						previousValue.TeeTime1 = null;
					}
					this._TeeTime2.Entity = value;
					if ((value != null))
					{
						value.TeeTime1 = this;
					}
					this.SendPropertyChanged("TeeTime2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseData_TeeTime", Storage="_CourseData", ThisKey="CourseId", OtherKey="Id", IsForeignKey=true)]
		public CourseData CourseData
		{
			get
			{
				return this._CourseData.Entity;
			}
			set
			{
				CourseData previousValue = this._CourseData.Entity;
				if (((previousValue != value) 
							|| (this._CourseData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseData.Entity = null;
						previousValue.TeeTimes.Remove(this);
					}
					this._CourseData.Entity = value;
					if ((value != null))
					{
						value.TeeTimes.Add(this);
						this._CourseId = value.Id;
					}
					else
					{
						this._CourseId = default(int);
					}
					this.SendPropertyChanged("CourseData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hole_TeeTime", Storage="_Hole", ThisKey="HoleId", OtherKey="Id", IsForeignKey=true)]
		public Hole Hole
		{
			get
			{
				return this._Hole.Entity;
			}
			set
			{
				Hole previousValue = this._Hole.Entity;
				if (((previousValue != value) 
							|| (this._Hole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hole.Entity = null;
						previousValue.TeeTimes.Remove(this);
					}
					this._Hole.Entity = value;
					if ((value != null))
					{
						value.TeeTimes.Add(this);
						this._HoleId = value.Id;
					}
					else
					{
						this._HoleId = default(int);
					}
					this.SendPropertyChanged("Hole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeeTime_TeeTime", Storage="_TeeTime1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public TeeTime TeeTime1
		{
			get
			{
				return this._TeeTime1.Entity;
			}
			set
			{
				TeeTime previousValue = this._TeeTime1.Entity;
				if (((previousValue != value) 
							|| (this._TeeTime1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeeTime1.Entity = null;
						previousValue.TeeTime2 = null;
					}
					this._TeeTime1.Entity = value;
					if ((value != null))
					{
						value.TeeTime2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("TeeTime1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
